component Main {
  a : Void {
    void
  }

  render : String {
    ""
  }
}
--------------------------------------------------------------------------------
module Test {
  factorial(n : Number) : Number {
    helper(n, 1)
  } where {
    helper = (n : Number, acc : Number) : Number {
      if (n == 0) {
        acc
      }
      else {
        helper(n - 1, acc * n)
      }
    }
  }
}
--------------------------------------------------------------------------------
module Test {
  factorial (n : Number) : Number {
    1
  } where {
    helper =
      (n : Number, acc : Number) : Number {
        if (n == 0) {
          acc
        } else {
          helper(n - 1, acc * n)
        }
      }
  }
}
--------------------------------------------------------------------------------
module Test {
   factorial (n : Number) : Number {
    1
  } where {
    helper =
      (n : Number, acc : Number) : Number {
        if (n == 0) {
          acc
        } else {
          helper(n - 1, acc * n)
        }
      }

    result = helper(n, 1)
  }
}
--------------------------------------------------------------------------------
module Test {
  a(n : Number) : Number {
    c(n, 1)
  } where {
    b = (n : Number, acc : Number) : Number {
      if (n == 0) {
        acc
      }
      else {
        c(n - 1, acc * n)
      }
    }

    c = (n : Number, acc : Number) : Number {
      if (n == 0) {
        acc
      }
      else {
        b(n - 1, acc * n)
      }
    }
  }
}
--------------------------------------------------------------------------------
module Test {
  factorial (n : Number) : Number {
    try {
      helper =
        (n : Number, acc : Number) : Number {
          if (n == 0) {
            acc
          } else {
            helper(n - 1, acc * n)
          }
        }

      helper(n, 1)
    }
  }
}
