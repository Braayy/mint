module Result {
  fun error (input : a) : Result(a, b) {
    `new Err(input)`
  }
}

component Main {
  fun test : String {
    try {
      x =
        Result.error("Blah")

      x
    } catch String => error {
      error
    }
  }

  fun render : String {
    ""
  }
}
---------------------------------------------------------------TryCatchesNothing
component Main {
  fun test : String {
    try {
      x =
        ""
    } catch String => error {
      ""
    }
  }

  fun render : String {
    ""
  }
}
------------------------------------------------------------------TryDidNotCatch
module Result {
  fun error (input : a) : Result(a, b) {
    `new Err(input)`
  }
}

component Main {
  fun test : String {
    try {
      x =
        Result.error("Blah")

      x
    }
  }

  fun render : String {
    ""
  }
}
------------------------------------------------------------TryCatchTypeMismatch
module Result {
  fun error (input : a) : Result(a, b) {
    `new Err(input)`
  }
}

component Main {
  fun test : String {
    try {
      x =
        Result.error("Blah")

      "test"
    } catch String => error {
      true
    }
  }

  fun render : String {
    ""
  }
}
-------------------------------------------------------------------TryCatchedAll
module Result {
  fun error (input : a) : Result(a, b) {
    `new Err(input)`
  }
}

component Main {
  fun test : String {
    try {
      x =
        Result.error("Blah")

      "test"
    } catch String => error {
      "X"
    } catch {
      "Y"
    }
  }

  fun render : String {
    ""
  }
}
------------------------------------------------------------TryCatchTypeMismatch
module Result {
  fun error (input : a) : Result(a, b) {
    `new Err(input)`
  }
}

component Main {
  fun test : String {
    try {
      x =
        Result.error("Blah")

      "test"
    } catch {
      true
    }
  }

  fun render : String {
    ""
  }
}
------------------------------------------------------------FunctionTypeMismatch
module Result {
  fun error (input : a) : Result(a, b) {
    `new Err(input)`
  }
}

component Main {
  fun test : String {
    try {
      x =
        Result.error("Blah")

      x
    } catch String => error {
      false
    }
  }

  fun render : String {
    ""
  }
}
