module Promise {
  reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  test : Promise(Never, String) {
    parallel {
      greeting =
        Promise.reject("hello")

      blah =
        Promise.reject(0)
    } then {
      "true"
    } catch String => a {
      "hello"
    } catch Number => a {
      "hello"
    }
  }

  render : Html {
    <div/>
  }
}
-------------------------------------------------------------ParallelDidNotCatch
module Promise {
  reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  test : Promise(Never, Bool) {
    parallel {
      greeting =
        Promise.reject("hello")

      blah =
        Promise.reject(0)
    } then {
      true
    }
  }

  render : Html {
    <div/>
  }
}
----------------------------------------------------------ParallelCatchesNothing
component Main {
  test : Promise(Never, Bool) {
    parallel {
      true
    } then {
      true
    } catch String => error {
      false
    }
  }

  render : Html {
    <div/>
  }
}
-------------------------------------------------------ParallelCatchTypeMismatch
module Promise {
  reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  test : Promise(Never, Bool) {
    parallel {
      blah =
        Promise.reject(0)
    } then {
      true
    } catch Number => error {
      ""
    }
  }

  render : Html {
    <div/>
  }
}

-------------------------------------------------------ParallelCatchTypeMismatch
module Promise {
  reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  test : Promise(Never, Bool) {
    parallel {
      blah =
        Promise.reject(0)
    } then {
      true
    } catch {
      ""
    }
  }

  render : Html {
    <div/>
  }
}
--------------------------------------------------------------ParallelCatchedAll
module Promise {
  reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  test : Promise(Never, Bool) {
    parallel {
      blah =
        Promise.reject(0)

    } then {
      true
    } catch Number => error {
      false
    } catch {
      false
    }
  }

  render : Html {
    <div/>
  }
}
