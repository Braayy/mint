component Do {
  state greeting : String = "ho"

  fun test : Promise(Never, Void) {
    sequence {
      greeting = "hello"
      next { greeting = greeting }
    }
  }

  fun render : Html {
    <div/>
  }
}
--------------------------------------------------------------------------------
class $Do extends Component {
  constructor(props) {
    super(props)
    this.state = new Record({
      greeting: `ho`
    })
  }

  get greeting() {
    return this.state.greeting
  }

  test() {
    return (async () => {
      let _result = null;

      try {
        let greeting = await `hello`

        _result = await new Promise((_resolve) => {
          this.setState(_update(this.state, new Record({
            greeting: greeting
          })), _resolve)
        })
      } catch (_error) {
        if (_error instanceof DoError) {} else {
          console.warn(`Unhandled error in do statement`)
          console.log(_error)
        }
      }

      return _result
    })()
  }

  render() {
    return _createElement("div", {})
  }
}

$Do.displayName = "Do"
