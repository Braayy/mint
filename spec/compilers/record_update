record Record {
  name: String
}

component Main {
  property record : Record = { name = "Doe" }

  fun test : Record {
    { record | name = "John" }
  }

  fun render : Html {
    try {
      test()

      <div/>
    }
  }
}
--------------------------------------------------------------------------------
class $$Record extends Record {}

$$Record.mappings = {
  "name": null
}

$$Record.decode = (_input) => {
  let name = Decoder.field(`name`, Decoder.string)(_input)
  if (name instanceof Err) {
    return name
  }

  return new Ok(new $$Record({
    name: name.value
  }))
}

class A extends Component {
  construtor(props) {
    super(props)

    this.defaultProps = {
      d: new $$Record({
        name: `Doe`
      })
    }
  }

  get b() {
    this.props.b || this.defaultProps.b
  }

  a() {
    return _update(this.b, {
      name: `John`
    })
  }

  render() {
    return (() => {
      this.a()

      return _createElement("div", {})
    })()
  }
}

$Main.displayName = "Main"
