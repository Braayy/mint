record State {
  name : String,
  age : Number
}

component Test {
  state : State {
    name = "Joe",
    age = 24
  }

  fun test : Void {
    next
      {
        name = "Hello",
        age = 30
      }
  }

  fun render : Html {
    <div/>
  }
}
--------------------------------------------------------------------------------
class $$State extends Record {}

$$State.mappings = {
  "name": null,
  "age": null
}

$$State.decode = (input) => {
  let name = Decoder.field(`name`, Decoder.string)(input)
  if (name instanceof Err) {
    return name
  }

  let age = Decoder.field(`age`, Decoder.number)(input)
  if (age instanceof Err) {
    return age
  }

  return new Ok(new $$State({
    name: name.value,
    age: age.value
  }))
}

class $Test extends Component {
  constructor(props) {
    super(props)
    this.state = new $$State({
      name: `Joe`,
      age: 24
    })
  }

  test() {
    return new Promise((_resolve) => {
      this.setState(new $$State({
        name: `Hello`,
        age: 30
      }), _resolve)
    })
  }

  render() {
    return _createElement("div", {})
  }
}

$Test.displayName = "Test"
