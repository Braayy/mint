enum A(a) {
  B(a)
}

enum C(a) {
  D(A(a))
}

module Test {
  fun a (b : C(a)) : a {
    case (b) {
      C::D a =>
        case (a) {
          A::B c =>
            c
        }
    }
  }
}
--------------------------------------------------------------------------------
class $$A_B extends Enum {
  constructor(_0) {
    this._0 = _0

    this.length = 1
  }
};

class $$C_D extends Enum {
  constructor(_0) {
    this._0 = _0

    this.length = 1
  }
};

const $Test = new(class {
  a(b) {
    return (() => {
      let __condition = b

      if (__condition instanceof $$C_D) {
        const a = __condition._0

        return (() => {
          let __condition = a

          if (__condition instanceof $$A_B) {
            const c = __condition._0

            return c
          }
        })()
      }
    })()
  }
})
