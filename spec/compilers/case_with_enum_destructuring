enum A(a) {
  B(a)
}

enum C(a) {
  D(A(a))
}

component Main {
  fun test (b : C(a)) : a {
    case (b) {
      C::D a =>
        case (a) {
          A::B c =>
            c
        }
    }
  }

  fun render : String {
    try {
      test(C::D(A::B("")))

      ""
    }
  }
}
--------------------------------------------------------------------------------
class $$A_B extends Enum {
  constructor(_0) {
    super()

    this._0 = _0

    this.length = 1
  }
};

class $$C_D extends Enum {
  constructor(_0) {
    super()

    this._0 = _0

    this.length = 1
  }
};

class $Main extends Component {
  test(a) {
    return (() => {
      let b = a;
      if (b instanceof $$C_D) {
        const a = b._0

        return (() => {
          let c = a;
          if (c instanceof $$A_B) {
            const c = c._0

            return c
          }
        })()
      }
    })()
  }

  render() {
    return (() => {
      this.test.bind(this)(new $$C_D(new $$A_B(``)))

      return ``
    })()
  }
}

$Main.displayName = "Main"
