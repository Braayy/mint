record X {
  name : String
}

component A {
  fun x (input : Object) : Result(Object.Error, x) {
    decode input as X
  }

  fun render : Html {
    <div/>
  }
}
--------------------------------------------------------------------------------
class $$X extends Record {}

$$X.mappings = {
  "name": null
}

$$X.decode = (input) => {
  let name = Decoder.field(`name`, Decoder.string)(input)
  if (name instanceof Err) {
    return name
  }

  return new Ok(new $$X({
    name: name.value
  }))
}

class $A extends Component {
  x(input) {
    return $$X.decode(input)
  }

  render() {
    return _createElement("div", {})
  }
}

$A.displayName = "A"
