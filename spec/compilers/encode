record Test {
  name : String,
  age : Number
}

component Main {
  fun encode : Object {
    encode { name = "Hello", age = 20 }
  }

  fun render : String {
    try {
      encode()

      ""
    }
  }
}
--------------------------------------------------------------------------------
class A extends Record {}

A.mappings = {
  a: "name",
  b: "age"
}

A.decode = ((_input) => {
  let a = Decoder.field(`name`, Decoder.string)(_input)
  if (a instanceof Err) { return a }

  let b = Decoder.field(`age`, Decoder.number)(_input)
  if (b instanceof Err) { return b }

  return new Ok(new A({
    a: a.value,
    b: b.value
  }))
})

class B extends Component {
  a() {
    return _encode(new A({
      a: `Hello`,
      b: 20
    }))
  }

  render() {
    return (() => {
      this.a()

      return ``
    })()
  }
}

B.displayName = "Main"
