record Test {
  name : String,
  age : Number
}

module Test {
  fun encode : Object {
    encode { name = "Hello", age = 20 }
  }
}
--------------------------------------------------------------------------------
class $$Test extends Record {}

$$Test.mappings = {
  "name": null,
  "age": null
}

$$Test.decode = (_input) => {
  let name = Decoder.field(`name`, Decoder.string)(_input)
  if (name instanceof Err) {
    return name
  }

  let age = Decoder.field(`age`, Decoder.number)(_input)
  if (age instanceof Err) {
    return age
  }

  return new Ok(new $$Test({
    name: name.value,
    age: age.value
  }))
}

const $Test = new(class {
  encode() {
    return _encode(new $$Test({
      name: `Hello`,
      age: 20
    }))
  }
})

