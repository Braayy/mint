enum Test(a) {
  X
  Y
  Z(Res(a, Number))
}

enum Res(error, value) {
  Error(error)
  Ok(value)
  Other(error, value)
}

component Main {
  fun a : Test(a) {
    Test::X
  }

  fun b : Res(String, String) {
    Res::Other("", "")
  }

  fun c : Test(String) {
    Test::Z(Res::Error(""))
  }

  fun render : String {
    try {
      a()
      b()
      c()

      ""
    }
  }
}
--------------------------------------------------------------------------------
class B extends Enum {
  constructor() {
    super()
    this.length = 0
  }
}
class F extends Enum {
  constructor() {
    super()
    this.length = 0
  }
}
class D extends Enum {
  constructor(_0) {
    super()
    this._0 = _0
    this.length = 1
  }
}

class E extends Enum {
  constructor(_0) {
    super()
    this._0 = _0
    this.length = 1
  }
}
class G extends Enum {
  constructor(_0) {
    super()
    this._0 = _0
    this.length = 1
  }
}
class C extends Enum {
  constructor(_0, _1) {
    super()
    this._0 = _0
    this._1 = _1
    this.length = 2
  }
}

class A extends Component {
  a() {
    return new B()
  }

  b() {
    return new C(``,``)
  }

  c() {
    return new D(new E(``))
  }

  render() {
    return (() => {
      this.a()

      this.b()

      this.c()

      return ``
    })()
  }
}

A.displayName = "Main"
